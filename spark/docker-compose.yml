services:
  spark:
    build:
      context: .
      dockerfile: Dockerfile
    # image: bitnami/spark:latest
    container_name: spark-standalone
    ports:
      - "8080:8080" # Spark UI
      - "7077:7077" # Spark master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_EXTRA_CLASSPATH=/opt/bitnami/spark/jars
    volumes:
      - ./data:/bitnami/spark/data
      - ./conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    networks:
      - sparknet

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    depends_on:
      - spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_EXTRA_CLASSPATH=/opt/bitnami/spark/jars
    volumes:
      - ./data:/bitnami/spark/data
      - ./conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    networks:
      - sparknet
  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: spark-jupyter
    ports:
      - "8888:8888"
    environment:
      - SPARK_MASTER=spark://spark:7077
    networks:
      - sparknet
    volumes:
      - ./notebooks:/home/badger/work
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # API access
      - "9001:9001" # Web console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - sparknet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  createbucket:
    image: minio/mc:latest
    depends_on:
      - minio
    networks:
      - sparknet
    entrypoint: >
      /bin/sh -c
        "mc alias set myminio http://minio:9000 minioadmin minioadmin &&
          mc mb myminio/mock-bucket &&
          mc policy set public myminio/mock-bucket &&
          tail -f /dev/null"
networks:
  sparknet:
    driver: bridge
volumes:
  minio-data:
