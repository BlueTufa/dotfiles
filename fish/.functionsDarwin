# Opens in an OS window, either the current working directory, or the object(s) passed as arguments
function o
  if test "$argv" = ""
    open $PWD
  else
    open $argv
  end
end

function enroll-token
  pushd ~/src/liv/tools/scripts/jwtMinter
  python3 mintJwt.py --claims-json-file system_for_enrollment_service.json --pem-cert-file cert.pem --pem-key-file private.pem
  popd
end

function config-token
  pushd ~/src/liv/tools/scripts/jwtMinter
  python3 mintJwt.py --claims-json-file system_for_client_config.json --pem-cert-file cert.pem --pem-key-file private.pem
  popd
end
#   if test "$status" -ne "0"
#     set ARROW "CB0000"
#   else
#     set ARROW 58a82f
#   end
# 
#   echo (set_color 3399FF)(whoami)(set_color $ARROW)@(set_color FF9933)(date -u '+%a %d %H:%M:%S UTC') (set_color 6B6FFF)(pretty_path)(set_color 03A9F4)(get_branch) 
#   set_color 03A9F4
#   echo "\$ "  
#   
#   echo $history[1] | grep -Ev '(^hh$|^sd|^l.$)' >> ~/.local/share/fish/hh.history
#   # also echo fish commands to the bash history
#   # BASH keep this file in memory so it doesn't work quite like you might want it to,
#   # also potential corruption issues (last one appears to win)
#   # echo $history[1] | grep -Ev '(^hh$|^sd|^l.$)' >> ~/.bash_history
# end

function nightly-override
  # echo '$argv[1]'
  set json "{ \"containerOverrides\": [ {\"name\": \"analytics-nightly-mystrength-com\", \"environment\": [{\"name\": \"STARTUP_CMD\", \"value\": \"$argv[1]\"}]} ]}"
  # echo $json
  aws ecs run-task --cluster dr-ecs-cluster --task-definition=analytics-nightly --overrides=$json
end

# fish-friendly wrapper around bass/nvm
function nvm
   bass source (brew --prefix nvm)/nvm.sh --no-use ';' nvm $argv
end

function gen-machine-name
  pwgen -s1 11 100000 | tr [a-z] [A-Z] | grep '^[^aeiou0-9]{1,1}[aeiou]{1,1}[^aeiou0-9]{1,2}[aeiou]{1}[^aeiou0-9]{1,1}[aeiou]{1,1}[^aeiou0-9]{1,2}[aeiou]{1}' | tail -n 1
end

function cd --description "Change current working directory"
  builtin cd $argv
  emit cwd
end

function __check_cwd --on-event cwd
  go-nvm
  go-py
end

function gwts2
  go-tf staging2
end

function gwtprod
  go-tf prod
end

function gwts3
  go-tf staging3
end

function go-tf
  cd ~/src/cleerly-infra-terraform/live/$argv
  tfenv use
  tf workspace select $argv
end

function precheck-npm
  prettier --write **/*.ts
  npm run lint:fix
end

function go-py
  if test -d "$PWD/venv"
    source venv/bin/activate.fish
  end

  if test -d "$PWD/.venv"
    source .venv/bin/activate.fish
  end
end

function go-nvm
  if test -e "$PWD/.nvmrc"
    nvm use
  end
end
