function ghb --description="Calculate and attempt to open a GitHub URL for the current branch"
  if git rev-parse --is-inside-work-tree >/dev/null 2>&1
    set --local remote_url (git remote get-url --push origin 2>/dev/null | sed 's/\.git$//g')/tree/(git rev-parse --abbrev-ref HEAD)
    open $remote_url
  else
    echo "Not a git repo"
  end
end

function glc --description="Print the most recent commit as a hyperlink with optional prefix text"
  if git rev-parse --is-inside-work-tree >/dev/null 2>&1
    set --local remote_url (git remote get-url --push origin 2>/dev/null | sed 's/\.git$//g')
    set --local commit_hash (git rev-parse HEAD)
    echo "$remote_url/commit/$commit_hash"
  else
    echo "Not a git repo"
  end
end

function fish_greeting --description="Override default behavior with a custom fish_greeting function"
  set -l is_darwin (test (uname) = "Darwin"; and echo true; or echo false)
  set -l is_local (test "$SSH_TTY" = ""; and echo true; or echo false)
  set -l is_vscode (test "$TERM_PROGRAM" = "vscode"; and echo true; or echo false)
  set -l is_jetbrains (test "$TERMINAL_EMULATOR" = "JetBrains-JediTerm"; and echo true; or echo false)
  set -l has_neofetch (command -v neofetch >/dev/null 2>&1; and echo true; or echo false)
  set -l has_fastfetch (command -v fastfetch >/dev/null 2>&1; and echo true; or echo false) 

  if $is_vscode; or $is_jetbrains
    return
  end
  
  if $is_darwin; and $has_fastfetch
    if $is_local
      # suppress logo for SSH sessions
      fastfetch --logo-type small
    else
      fastfetch
    end
  else if $has_neofetch
    neofetch 
  end
end

function cal --description "Enhanced calendar with qtr, cy, eoy support + lolcat"
  set arg $argv[1]

  switch $arg
    case ''
      /usr/bin/cal | lolcat 2>/dev/null

    case qtr
      set m (date -u +%m)
      set mb (math "($m - 1) % 3")
      set mf (math "2 - $mb")
      set opts
      test $mb -gt 0; and set opts $opts -B$mb
      test $mf -gt 0; and set opts $opts -A$mf
      /usr/bin/cal $opts | lolcat 2>/dev/null

    case eoy
      set m (date -u +%m)
      set rem (math "12 - $m")
      /usr/bin/cal -A$rem | lolcat 2>/dev/null

    case cy
      /usr/bin/cal (date -u +%Y) | lolcat 2>/dev/null

    case '*'
      /usr/bin/cal $argv | lolcat 2>/dev/null
  end
end

